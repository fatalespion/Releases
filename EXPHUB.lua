"local repo = 'https://raw.githubusercontent.com/violin-suzutsuki/LinoriaLib/main/'\r\n\r\nlocal Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()\r\nlocal ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()\r\nlocal SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()\r\n\r\nlocal Window = Library:CreateWindow({\r\n    Title = 'EXP HUB | Blackout',\r\n    Center = true,\r\n    AutoShow = true,\r\n    TabPadding = 8,\r\n    MenuFadeTime = 0.2\r\n})\r\n\r\nlocal Tabs = {\r\n    Visual = Window:AddTab('Visual'),\r\n    Debugging = Window:AddTab('Debug'),\r\n    ['HUD'] = Window:AddTab('HUD'),\r\n}\r\n\r\nlocal AvailbleRemotes = {}\r\n\r\nfor i,v in pairs(game.ReplicatedStorage:GetDescendants()) do\r\n    if v:IsA(\"RemoteEvent\") or v:IsA(\"RemoteFunction\") or v:IsA(\"BindableEvent\") then\r\n        table.insert(AvailbleRemotes, v.Name)\r\n    end     \r\nend    \r\nlocal LeftVisualGroupBox = Tabs.Visual:AddLeftGroupbox('ESP')\r\n\r\n_G.ESPTeamCheck = false\r\n_G.ESPEnabled = false\r\n_G.ESPLocal = false\r\n_G.ESPShowTracers = false\r\n_G.ESPHealthBar = false\r\n_G.ESPShowBox = false\r\n_G.ESPTracerColor = Color3.fromRGB(0, 255, 140)\r\n_G.ESPBoxColor = Color3.fromRGB(0, 255, 140)\r\n\r\nlocal ESPLines = {}\r\n\r\nlocal Camera = workspace.CurrentCamera\r\n\r\nlocal function StartESP()\r\n\tlocal lplr = game.Players.LocalPlayer\r\n\tlocal camera = game:GetService(\"Workspace\").CurrentCamera\r\n\tlocal CurrentCamera = workspace.CurrentCamera\r\n\tlocal worldtoViewportPoint = CurrentCamera.WorldToViewportPoint\r\n\r\n\tlocal HeadOff = Vector3.new(0, 0.5, 0)\r\n\tlocal LegOff = Vector3.new(0,3,0)\r\n\r\n\tfor i,v in pairs(game.Players:GetChildren()) do\r\n\t\tlocal Tracer = Drawing.new(\"Line\")\r\n\t\tTracer.Visible = false\r\n\t\tTracer.Color = _G.ESPTracerColor\r\n\t\tTracer.Thickness = 1\r\n\t\tTracer.Transparency = 1\r\n\r\n\t\tlocal BoxOutline = Drawing.new(\"Square\")\r\n\t\tBoxOutline.Visible = false\r\n\t\tBoxOutline.Color = Color3.new(0,0,0)\r\n\t\tBoxOutline.Thickness = 3\r\n\t\tBoxOutline.Transparency = 1\r\n\t\tBoxOutline.Filled = false\r\n\r\n\t\tlocal Box = Drawing.new(\"Square\")\r\n\t\tBox.Visible = false\r\n\t\tBox.Color = _G.ESPBoxColor\r\n\t\tBox.Thickness = 1\r\n\t\tBox.Transparency = 1\r\n\t\tBox.Filled = false\r\n\r\n\t\tlocal HealthBarOutline = Drawing.new(\"Square\")\r\n\t\tBoxOutline.Visible = false\r\n\t\tBoxOutline.Color = Color3.new(0,0,0)\r\n\t\tBoxOutline.Thickness = 3\r\n\t\tBoxOutline.Transparency = 1\r\n\t\tBoxOutline.Filled = false\r\n\r\n\t\tlocal HealthBar = Drawing.new(\"Square\")\r\n\t\tBoxOutline.Visible = false\r\n\t\tBoxOutline.Thickness = 1\r\n\t\tBoxOutline.Transparency = 1\r\n\t\tBoxOutline.Filled = false\r\n\r\n\t\tfunction lineesp()\r\n\t\t\tgame:GetService(\"RunService\").RenderStepped:Connect(function()\r\n\t\t\t\tif v.Character ~= nil and v.Character:FindFirstChild(\"Humanoid\") ~= nil and v.Character:FindFirstChild(\"HumanoidRootPart\") ~= nil and v ~= lplr and v.Character.Humanoid.Health > 0 then\r\n\t\t\t\t\tlocal Vector, OnScreen = camera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)\r\n\r\n\t\t\t\t\tif _G.ESPEnabled then\r\n\t\t\t\t\t\tif OnScreen then\r\n\t\t\t\t\t\t\tTracer.From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 1)\r\n\t\t\t\t\t\t\tTracer.To = Vector2.new(Vector.X, Vector.Y)\r\n\r\n\t\t\t\t\t\t\tif _G.ESPTeamCheck and v.TeamColor == lplr.TeamColor then\r\n\r\n\t\t\t\t\t\t\t\tTracer.Visible = false\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tif _G.ESPShowTracers then\r\n\t\t\t\t\t\t\t\t\tTracer.Visible = true\r\n\t\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tTracer.Visible = false\r\n\t\t\t\t\t\tend\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tTracer.Visible = false\r\n\t\t\t\t\tend\r\n\t\t\t\telse\r\n\t\t\t\t\tTracer.Visible = false\r\n\t\t\t\tend\r\n\t\t\tend)\r\n\t\tend\r\n\r\n\t\tfunction boxesp()\r\n\t\t\tgame:GetService(\"RunService\").RenderStepped:Connect(function()\r\n\t\t\t\tif v.Character ~= nil and v.Character:FindFirstChild(\"Humanoid\") ~= nil and v.Character:FindFirstChild(\"HumanoidRootPart\") ~= nil and v ~= lplr and v.Character.Humanoid.Health > 0 then\r\n\t\t\t\t\tlocal Vector, OnScreen = camera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)\r\n\r\n\t\t\t\t\tlocal RootPart = v.Character.HumanoidRootPart\r\n\t\t\t\t\tlocal Head = v.Character.Head\r\n\t\t\t\t\tlocal RootPosition, RootVis = worldtoViewportPoint(CurrentCamera, RootPart.Position)\r\n\t\t\t\t\tlocal HeadPosition = worldtoViewportPoint(CurrentCamera, Head.Position + HeadOff)\r\n\t\t\t\t\tlocal LegPosition = worldtoViewportPoint(CurrentCamera, RootPart.Position - LegOff)\r\n\r\n\t\t\t\t\tif _G.ESPEnabled then\r\n\t\t\t\t\t\tif OnScreen then\r\n\t\t\t\t\t\t\tBoxOutline.Size = Vector2.new(1000 / RootPosition.Z, HeadPosition.Y - LegPosition.Y)\r\n\t\t\t\t\t\t\tBoxOutline.Position = Vector2.new(RootPosition.X - BoxOutline.Size.X / 2, RootPosition.Y - BoxOutline.Size.Y / 2)\r\n\r\n\t\t\t\t\t\t\tBox.Size = Vector2.new(1000 / RootPosition.Z, HeadPosition.Y - LegPosition.Y)\r\n\t\t\t\t\t\t\tBox.Position = Vector2.new(RootPosition.X - Box.Size.X / 2, RootPosition.Y - Box.Size.Y / 2)\r\n\r\n\t\t\t\t\t\t\tHealthBarOutline.Size = Vector2.new(2, HeadPosition.Y - LegPosition.Y)\r\n\t\t\t\t\t\t\tHealthBarOutline.Position = BoxOutline.Position - Vector2.new(6,0)\r\n\r\n\t\t\t\t\t\t\tHealthBar.Size = Vector2.new(2, (HeadPosition.Y - LegPosition.Y) / (game:GetService(\"Players\")[v.Character.Name]:FindFirstChild(\"Humanoid\").MaxHealth / math.clamp(game:GetService(\"Players\")[v.Character.Name]:FindFirstChild(\"Humanoid\").Health, 0, game:GetService(\"Players\")[v.Character.Name]:WaitForChild(\"Humanoid\").MaxHealth)))\r\n\t\t\t\t\t\t\tHealthBar.Position = Vector2.new(Box.Position.X - 6, Box.Position.Y + (1/HealthBar.Size.Y))\r\n\t\t\t\t\t\t\tHealthBar.Color = Color3.fromRGB(255 - 255 / (game:GetService(\"Players\")[v.Character.Name]:FindFistChild(\"Humanoid\").MaxHealth / game:GetService(\"Players\")[v.Character.Name]:FindFistChild(\"Humanoid\").Health), 255 / (game:GetService(\"Players\")[v.Character.Name]:FindFistChild(\"Humanoid\").MaxHealth / game:GetService(\"Players\")[v.Character.Name]:FindFistChild(\"Humanoid\").Health), 0)\r\n\r\n\t\t\t\t\t\t\tif _G.ESPTeamCheck and v.TeamColor == lplr.TeamColor then\r\n\t\t\t\t\t\t\t\tBoxOutline.Visible = false\r\n\t\t\t\t\t\t\t\tBox.Visible = false\r\n\r\n\t\t\t\t\t\t\t\tif _G.ESPHealthBar then\r\n\t\t\t\t\t\t\t\t\tHealthBarOutline.Visible = false\r\n\t\t\t\t\t\t\t\t\tHealthBar.Visible = false\r\n\t\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tif _G.ESPShowBox then\r\n\t\t\t\t\t\t\t\t\tBoxOutline.Visible = true\r\n\t\t\t\t\t\t\t\t\tBox.Visible = true\r\n\t\t\t\t\t\t\t\tend\r\n\r\n\t\t\t\t\t\t\t\tif _G.ESPHealthBar then\r\n\t\t\t\t\t\t\t\t\tHealthBarOutline.Visible = true\r\n\t\t\t\t\t\t\t\t\tHealthBar.Visible = true\r\n\t\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tBoxOutline.Visible = false\r\n\t\t\t\t\t\t\tBox.Visible = false\r\n\t\t\t\t\t\t\tHealthBarOutline.Visible = false\r\n\t\t\t\t\t\t\tHealthBar.Visible = false\r\n\t\t\t\t\t\tend\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tBoxOutline.Visible = false\r\n\t\t\t\t\t\tBox.Visible = false\r\n\t\t\t\t\t\tHealthBarOutline.Visible = false\r\n\t\t\t\t\t\tHealthBar.Visible = false\r\n\t\t\t\t\tend\r\n\t\t\t\telse\r\n\t\t\t\t\tBoxOutline.Visible = false\r\n\t\t\t\t\tBox.Visible = false\r\n\t\t\t\t\tHealthBarOutline.Visible = false\r\n\t\t\t\t\tHealthBar.Visible = false\r\n\t\t\t\tend\r\n\t\t\tend)\r\n\t\tend\r\n\r\n\t\tcoroutine.wrap(lineesp)()\r\n\t\tcoroutine.wrap(boxesp)()\r\n\tend\r\n\r\n\tgame.Players.PlayerAdded:Connect(function(v)\r\n\t\tlocal Tracer = Drawing.new(\"Line\")\r\n\t\tTracer.Visible = false\r\n\t\tTracer.Color = _G.ESPTracerColor\r\n\t\tTracer.Thickness = 1\r\n\t\tTracer.Transparency = 1\r\n\r\n\t\tlocal BoxOutline = Drawing.new(\"Square\")\r\n\t\tBoxOutline.Visible = false\r\n\t\tBoxOutline.Color = Color3.new(0,0,0)\r\n\t\tBoxOutline.Thickness = 3\r\n\t\tBoxOutline.Transparency = 1\r\n\t\tBoxOutline.Filled = false\r\n\r\n\t\tlocal Box = Drawing.new(\"Square\")\r\n\t\tBox.Visible = false\r\n\t\tBox.Color = _G.ESPBoxColor\r\n\t\tBox.Thickness = 1\r\n\t\tBox.Transparency = 1\r\n\t\tBox.Filled = false\r\n\r\n\t\tlocal HealthBarOutline = Drawing.new(\"Square\")\r\n\t\tBoxOutline.Visible = false\r\n\t\tBoxOutline.Color = Color3.new(0,0,0)\r\n\t\tBoxOutline.Thickness = 3\r\n\t\tBoxOutline.Transparency = 1\r\n\t\tBoxOutline.Filled = false\r\n\r\n\t\tlocal HealthBar = Drawing.new(\"Square\")\r\n\t\tBoxOutline.Visible = false\r\n\t\tBoxOutline.Thickness = 1\r\n\t\tBoxOutline.Transparency = 1\r\n\t\tBoxOutline.Filled = false\r\n\r\n\t\tfunction lineesp()\r\n\t\t\tgame:GetService(\"RunService\").RenderStepped:Connect(function()\r\n\t\t\t\tif v.Character ~= nil and v.Character:FindFirstChild(\"Humanoid\") ~= nil and v.Character:FindFirstChild(\"HumanoidRootPart\") ~= nil and v ~= lplr and v.Character.Humanoid.Health > 0 then\r\n\t\t\t\t\tlocal Vector, OnScreen = camera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)\r\n\r\n\t\t\t\t\tif _G.ESPEnabled then\r\n\t\t\t\t\t\tif OnScreen then\r\n\t\t\t\t\t\t\tTracer.From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 1)\r\n\t\t\t\t\t\t\tTracer.To = Vector2.new(Vector.X, Vector.Y)\r\n\r\n\t\t\t\t\t\t\tif _G.ESPTeamCheck and v.TeamColor == lplr.TeamColor then\r\n\r\n\t\t\t\t\t\t\t\tTracer.Visible = false\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tif _G.ESPShowTracers then\r\n\t\t\t\t\t\t\t\t\tTracer.Visible = true\r\n\t\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tTracer.Visible = false\r\n\t\t\t\t\t\tend\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tTracer.Visible = false\r\n\t\t\t\t\tend\r\n\t\t\t\telse\r\n\t\t\t\t\tTracer.Visible = false\r\n\t\t\t\tend\r\n\t\t\tend)\r\n\t\tend\r\n\r\n\t\tfunction boxesp()\r\n\t\t\tgame:GetService(\"RunService\").RenderStepped:Connect(function()\r\n\t\t\t\tif v.Character ~= nil and v.Character:FindFirstChild(\"Humanoid\") ~= nil and v.Character:FindFirstChild(\"HumanoidRootPart\") ~= nil and v ~= lplr and v.Character.Humanoid.Health > 0 then\r\n\t\t\t\t\tlocal Vector, OnScreen = camera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)\r\n\r\n\t\t\t\t\tlocal RootPart = v.Character.HumanoidRootPart\r\n\t\t\t\t\tlocal Head = v.Character.Head\r\n\t\t\t\t\tlocal RootPosition, RootVis = worldtoViewportPoint(CurrentCamera, RootPart.Position)\r\n\t\t\t\t\tlocal HeadPosition = worldtoViewportPoint(CurrentCamera, Head.Position + HeadOff)\r\n\t\t\t\t\tlocal LegPosition = worldtoViewportPoint(CurrentCamera, RootPart.Position - LegOff)\r\n\r\n\t\t\t\t\tif _G.ESPEnabled then\r\n\t\t\t\t\t\tif OnScreen then\r\n\t\t\t\t\t\t\tBoxOutline.Size = Vector2.new(1000 / RootPosition.Z, HeadPosition.Y - LegPosition.Y)\r\n\t\t\t\t\t\t\tBoxOutline.Position = Vector2.new(RootPosition.X - BoxOutline.Size.X / 2, RootPosition.Y - BoxOutline.Size.Y / 2)\r\n\r\n\t\t\t\t\t\t\tBox.Size = Vector2.new(1000 / RootPosition.Z, HeadPosition.Y - LegPosition.Y)\r\n\t\t\t\t\t\t\tBox.Position = Vector2.new(RootPosition.X - Box.Size.X / 2, RootPosition.Y - Box.Size.Y / 2)\r\n\r\n\t\t\t\t\t\t\tHealthBarOutline.Size = Vector2.new(2, HeadPosition.Y - LegPosition.Y)\r\n\t\t\t\t\t\t\tHealthBarOutline.Position = BoxOutline.Position - Vector2.new(6,0)\r\n\r\n\t\t\t\t\t\t\tHealthBar.Size = Vector2.new(2, (HeadPosition.Y - LegPosition.Y) / (game:GetService(\"Players\")[v.Character.Name]:FindFirstChild(\"Humanoid\").MaxHealth / math.clamp(game:GetService(\"Players\")[v.Character.Name]:FindFirstChild(\"Humanoid\").Health, 0, game:GetService(\"Players\")[v.Character.Name]:WaitForChild(\"Humanoid\").MaxHealth)))\r\n\t\t\t\t\t\t\tHealthBar.Position = Vector2.new(Box.Position.X - 6, Box.Position.Y + (1/HealthBar.Size.Y))\r\n\t\t\t\t\t\t\tHealthBar.Color = Color3.fromRGB(255 - 255 / (game:GetService(\"Players\")[v.Character.Name]:FindFistChild(\"Humanoid\").MaxHealth / game:GetService(\"Players\")[v.Character.Name]:FindFistChild(\"Humanoid\").Health), 255 / (game:GetService(\"Players\")[v.Character.Name]:FindFistChild(\"Humanoid\").MaxHealth / game:GetService(\"Players\")[v.Character.Name]:FindFistChild(\"Humanoid\").Health), 0)\r\n\r\n\t\t\t\t\t\t\tif _G.ESPTeamCheck and v.TeamColor == lplr.TeamColor then\r\n\t\t\t\t\t\t\t\tBoxOutline.Visible = false\r\n\t\t\t\t\t\t\t\tBox.Visible = false\r\n\r\n\t\t\t\t\t\t\t\tif _G.ESPHealthBar then\r\n\t\t\t\t\t\t\t\t\tHealthBarOutline.Visible = false\r\n\t\t\t\t\t\t\t\t\tHealthBar.Visible = false\r\n\t\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tif _G.ESPShowBox then\r\n\t\t\t\t\t\t\t\t\tBoxOutline.Visible = true\r\n\t\t\t\t\t\t\t\t\tBox.Visible = true\r\n\t\t\t\t\t\t\t\tend\r\n\r\n\t\t\t\t\t\t\t\tif _G.ESPHealthBar then\r\n\t\t\t\t\t\t\t\t\tHealthBarOutline.Visible = true\r\n\t\t\t\t\t\t\t\t\tHealthBar.Visible = true\r\n\t\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tBoxOutline.Visible = false\r\n\t\t\t\t\t\t\tBox.Visible = false\r\n\t\t\t\t\t\t\tHealthBarOutline.Visible = false\r\n\t\t\t\t\t\t\tHealthBar.Visible = false\r\n\t\t\t\t\t\tend\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tBoxOutline.Visible = false\r\n\t\t\t\t\t\tBox.Visible = false\r\n\t\t\t\t\t\tHealthBarOutline.Visible = false\r\n\t\t\t\t\t\tHealthBar.Visible = false\r\n\t\t\t\t\tend\r\n\t\t\t\telse\r\n\t\t\t\t\tBoxOutline.Visible = false\r\n\t\t\t\t\tBox.Visible = false\r\n\t\t\t\t\tHealthBarOutline.Visible = false\r\n\t\t\t\t\tHealthBar.Visible = false\r\n\t\t\t\tend\r\n\t\t\tend)\r\n\t\tend\r\n\r\n\t\tcoroutine.wrap(lineesp)()\r\n\t\tcoroutine.wrap(boxesp)()\r\n\tend)\r\nend\t\r\n\r\nStartESP()\r\n\r\nLeftVisualGroupBox:AddToggle('EnabledESP', {\r\n    Text = 'Enable',\r\n    Default = false, -- Default value (true / false)\r\n    Tooltip = 'Enable the esp', -- Information shown when you hover over the toggle\r\n\r\n    Callback = function(Value)\r\n         _G.ESPEnabled = Value           \r\n    end\r\n})\r\n\r\nLeftVisualGroupBox:AddToggle('TeamCheck', {\r\n    Text = 'Team Check',\r\n    Default = false, -- Default value (true / false)\r\n    Tooltip = 'Checks if players are on your team (if there is no teams then set this to false)', -- Information shown when you hover over the toggle\r\n\r\n    Callback = function(Value)\r\n       _G.ESPTeamCheck = Value\r\n    end\r\n})\r\n\r\nLeftVisualGroupBox:AddToggle('ShowTracers', {\r\n    Text = 'Show Tracers',\r\n    Default = false, -- Default value (true / false)\r\n    Tooltip = 'Shows the tracers', -- Information shown when you hover over the toggle\r\n\r\n    Callback = function(Value)\r\n       _G.ESPShowTracers = Value\r\n    end\r\n})\r\n\r\nLeftVisualGroupBox:AddToggle('ShowBox', {\r\n    Text = 'Show Boxes',\r\n    Default = false, -- Default value (true / false)\r\n    Tooltip = 'Shows the boxes', -- Information shown when you hover over the toggle\r\n\r\n    Callback = function(Value)\r\n       _G.ESPShowBox = Value\r\n    end\r\n})\r\n\r\nLeftVisualGroupBox:AddToggle('ShowHealthBar', {\r\n    Text = 'Show HealthBar',\r\n    Default = false, -- Default value (true / false)\r\n    Tooltip = 'Shows the health bar of the player', -- Information shown when you hover over the toggle\r\n\r\n    Callback = function(Value)\r\n       _G.ESPHealthBar = Value\r\n    end\r\n})\r\n\r\nLeftVisualGroupBox:AddLabel('Color'):AddColorPicker('ESPColorPicker', {\r\n    Default = Color3.fromRGB(0, 255, 140), -- Bright green\r\n    Title = 'Tracer Color', -- Optional. Allows you to have a custom color picker title (when you open it)\r\n    Transparency = 0, -- Optional. Enables transparency changing for this color picker (leave as nil to disable)\r\n\r\n    Callback = function(Value)\r\n        _G.ESPTracerColor = Value\r\n    end\r\n})\r\n\r\nLeftVisualGroupBox:AddLabel('Color'):AddColorPicker('ESPBoxColorPicker', {\r\n    Default = Color3.fromRGB(0, 255, 140), -- Bright green\r\n    Title = 'Box Color', -- Optional. Allows you to have a custom color picker title (when you open it)\r\n    Transparency = 0, -- Optional. Enables transparency changing for this color picker (leave as nil to disable)\r\n\r\n    Callback = function(Value)\r\n        _G.ESPBoxColor = Value\r\n    end\r\n})\r\n\r\nlocal LeftGroupBox = Tabs.Debugging:AddLeftGroupbox('Remotes')\r\n\r\nLeftGroupBox:AddLabel('This allows you to run any remote of your choice')\r\n\r\nLeftGroupBox:AddDivider()\r\n\r\n_G.RemoteSelected = nil\r\n_G.Args1 = nil\r\n_G.Args2 = nil\r\n_G.Args3 = nil\r\n_G.Args4 = nil\r\n_G.Args5 = nil\r\n\r\nLeftGroupBox:AddDropdown('MyDropdown', {\r\n    Values = AvailbleRemotes,\r\n    Default = 1,\r\n    Multi = false,\r\n\r\n    Text = 'Remotes',\r\n    Tooltip = '',\r\n\r\n    Callback = function(Value)\r\n        _G.RemoteSelected = Value\r\n    end\r\n})\r\n\r\nLeftGroupBox:AddDivider()\r\n\r\nLeftGroupBox:AddInput('Args1', {\r\n    Default = '',\r\n    Numeric = false,\r\n    Finished = false,\r\n\r\n    Text = 'Argument 1',\r\n    Tooltip = '',\r\n    Placeholder = '',\r\n\r\n    Callback = function(Value)\r\n        _G.Args1 = Value\r\n    end\r\n})\r\n\r\nLeftGroupBox:AddInput('Args2', {\r\n    Default = '',\r\n    Numeric = false,\r\n    Finished = false,\r\n\r\n    Text = 'Argument 2',\r\n    Tooltip = '',\r\n    Placeholder = '',\r\n\r\n    Callback = function(Value)\r\n        _G.Args2 = Value\r\n    end\r\n})\r\n\r\nLeftGroupBox:AddInput('Args3', {\r\n    Default = '',\r\n    Numeric = false,\r\n    Finished = false,\r\n\r\n    Text = 'Argument 3',\r\n    Tooltip = '',\r\n    Placeholder = '',\r\n\r\n    Callback = function(Value)\r\n        _G.Args3 = Value\r\n    end\r\n})\r\n\r\nLeftGroupBox:AddInput('Args4', {\r\n    Default = '',\r\n    Numeric = false,\r\n    Finished = false,\r\n\r\n    Text = 'Argument 4',\r\n    Tooltip = '',\r\n    Placeholder = '',\r\n\r\n    Callback = function(Value)\r\n        _G.Args4 = Value\r\n    end\r\n})\r\n\r\nLeftGroupBox:AddInput('Args5', {\r\n    Default = '',\r\n    Numeric = false,\r\n    Finished = false,\r\n\r\n    Text = 'Argument 5',\r\n    Tooltip = '',\r\n    Placeholder = '',\r\n\r\n    Callback = function(Value)\r\n        _G.Args5 = Value\r\n    end\r\n})\r\n\r\nLeftGroupBox:AddDivider()\r\n\r\nlocal MyButton = LeftGroupBox:AddButton({\r\n    Text = 'Run',\r\n    Func = function()\r\n        for i,v in pairs(game.ReplicatedStorage:GetDescendants()) do\r\n            if v:IsA(\"RemoteEvent\") then\r\n                if v.Name == _G.RemoteSelected then\r\n                    v:FireServer(_G.Args1, _G.Args2, _G.Args3, _G.Args4, _G.Args5)\r\n                end   \r\n            elseif v:IsA(\"RemoteFunction\") then\r\n                if v.Name == _G.RemoteSelected then\r\n                    v:InvokeServer(_G.Args1, _G.Args2, _G.Args3, _G.Args4, _G.Args5)\r\n                end     \r\n            elseif v:IsA(\"BindableEvent\") then  \r\n                if v.Name == _G.RemoteSelected then\r\n                    v:Fire(_G.Args1, _G.Args2, _G.Args3, _G.Args4, _G.Args5)\r\n                end \r\n            end\r\n        end    \r\n    end,\r\n    DoubleClick = false,\r\n    Tooltip = 'Run the remote you chose'\r\n})\r\n\r\nlocal RightGroupBox = Tabs.Debugging:AddRightGroupbox('Script Hub')\r\n\r\nlocal IY = RightGroupBox:AddButton({\r\n    Text = 'Infinite Yield',\r\n    Func = function()\r\n        loadstring(game:HttpGet(\"https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source\"))()\r\n    end,\r\n    DoubleClick = true,\r\n    Tooltip = 'Run infinite yield'\r\n})\r\n\r\nLibrary:SetWatermarkVisibility(true)\r\n\r\nlocal FrameTimer = tick()\r\nlocal FrameCounter = 0\r\nlocal FPS = 60\r\n\r\nlocal WatermarkConnection = game:GetService('RunService').RenderStepped:Connect(function()\r\n    FrameCounter += 1\r\n\r\n    if (tick() - FrameTimer) >= 1 then\r\n        FPS = FrameCounter\r\n        FrameTimer = tick()\r\n        FrameCounter = 0\r\n    end\r\n\r\n    Library:SetWatermark(('EXP HUB | %s fps | %s ms | %s '):format(\r\n        math.floor(FPS),\r\n        math.floor(game:GetService('Stats').Network.ServerStatsItem['Data Ping']:GetValue()),\r\n        game.Players.LocalPlayer.Name\r\n    ))\r\nend)\r\n\r\nLibrary.KeybindFrame.Visible = false\r\n\r\nLibrary:OnUnload(function()\r\n    WatermarkConnection:Disconnect()\r\n\r\n    print('Unloaded!')\r\n    Library.Unloaded = true\r\nend)\r\n\r\nlocal MenuGroup = Tabs['HUD']:AddLeftGroupbox('Menu')\r\n\r\nMenuGroup:AddButton('Unload', function() Library:Unload() end)\r\n\r\nThemeManager:SetLibrary(Library)\r\nSaveManager:SetLibrary(Library)\r\n\r\nSaveManager:IgnoreThemeSettings()\r\n\r\nThemeManager:SetFolder('EXPHUB')\r\nSaveManager:SetFolder('EXPHUB'..game.PlaceId)\r\n\r\nSaveManager:BuildConfigSection(Tabs['HUD'])\r\n\r\nThemeManager:ApplyToTab(Tabs['HUD'])\r\nThemeManager:ApplyTheme(\"Mint\")\r\n\r\nSaveManager:LoadAutoloadConfig()"